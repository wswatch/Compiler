This file tells you the main method in this project and what these methods will do.

Class Compiler
Name			|argument                | function
--------------------------------------------------------------------------------------
Main			| string args,	    | the main function of the project, its entrance
						    | 
Class RW_File
Name			|argument                | function
--------------------------------------------------------------------------------------
RW_File		| String path		    | Use path to get the jack file or jack files in a directory

getName		| 			    | return the name of current file

getPath		| File file		    | return where to write the output 

isJackFile		| File file		    | judge if a file is a jack file

Read			| 			    | read the current file's content and return it

ReadFile		| File file		    | read file's content and return it

Write			| ArrayList<String> txt  | write txt to the target file
			| boolean kind	    | if kind is false, which means it is now write tokens
			|			    | then use XXXT.xml to the name of the target_file.
			|			    | Otherwise, get XXX.xml target_file

WriteFile		| String txt		    | write txt to File file
			| File file		 	
	
-----------------------------------------------------------------------------------------
Class Translate
Name			|argument                | function
--------------------------------------------------------------------------------------
deleteComments	|  String str		    | delete the comment in str
			| 		 	    | use isInComment to judge if str is in /**/

run			| 		 	    | read a jack file and use other methods to get tokens  
			|			    | and xml

Class Token
Paraments		| Use               
--------------------------------------------------------------------------------------
String word		| the content of a word
Type kind		| the type/kind of the token(belongs to one of keyword,symbol,integerConstant,stringConstant,identifier)
Int linearNum        | use in error handle to tell which line has error		    


Class Tokenizer
Name			|argument                | function
--------------------------------------------------------------------------------------
stringToken		| Token token		    | change a token into the output structure <XXX> ZZZ </XXX>
getOut			|			    | get the output tokens to Write

Add			| char ch		    | judge ch is a new token or a part of the previous word
			|			    | if it is a new token, first build the restored word as
			|			    | as a token and the new ch a token.
			|		           | Otherwise, add this ch to the word.

Check			| char ch		    | if it is a new token, first build the restored word as
			|			    | as a token and the new ch a token.

Deal			| string str		    | build a token with the content str.

isNum			| string num		    | judge if a string is a number

isIdentifier		| string str		    | judge if a string is a reasonable identifier.



Class Parser
Name			|argument                | function
--------------------------------------------------------------------------------------
stringToken		| Token token		    | change a token into the output structure <XXX> ZZZ </XXX>

Add			| Type kind		    | judge if the represent tokens' type is kind 
			| String space	    | if it is, then build a string "space + <XXX> ZZZ </XXX>" to the output
			|			    | space is the blank space
			|			    | then move to the next token

Add			| String word		    | judge if the represent tokens' content is word 
			| String space	    | if it is, then build a string "space + <XXX> word </XXX>" to the output
			|			    | space is the blank space
			|			    | then move to the next token

Add			| String space	    | just put the present token to the output
			| 			    | the structure is "space + <XXX> word </XXX>" to the output
			|			    | 
			|			    | then move to the next token

Compare		| Type kind		    | judge if the present token's type is kind

Compare		| String word		    | judge if the present token's content is word

getToken		| char ch		    | get the represent token, and move to the next token

statements		| String space	    | go through the tokens and build the concrete statements form the xml is

statement		| String space	    | go through the tokens and decide which statement it is

letStatement		| String space	    | use tokens to meet with the letStatement's structure and build the correspond part of xml

ifStatement		| String space	    | use tokens to meet with the ifStatement's structure and build the correspond part of xml

doStatement		| String space	    | use tokens to meet with the doStatement's structure and build the correspond part of xml

whileStatement	| String space	    | use tokens to meet with the whileStatement's structure and build the correspond part of xml

returnStatement	| String space	    | use tokens to meet with the returnStatement's structure and build the correspond part of xml

expression		| String space	    | use tokens to meet with the expression's structure and build the correspond part of xml

Term			| String space	    | use tokens to meet with concrete term's structure and build the correspond part of xml

subroutineCall	| String space	    | use tokens to meet with the subroutineCall's structure and build the correspond part of xml
			|			    | ps: it do not have the <subroutineCall> ... </subroutineCall>

expressionList	| String space	    | use tokens to meet with the expressionList's structure and build the correspond part of xml
			|			    | use ')' to judge the end of it

op			| 			    | judge if the present token is a op

classStatement	| String space	    | use tokens to meet with the class's structure and build the correspond part of xml

classVarDec		| String space	    | use tokens to meet with the classVarDec's structure and build the correspond part of xml

Type			| String space	    | use tokens to meet with the type's structure and build the correspond part of xml

subroutineDec		| String space	    | use tokens to meet with the subroutineDec's structure and build the correspond part of xml

varDec			| String space	    | use tokens to meet with the varDec's structure and build the correspond part of xml

subroutineBody	| String space	    | use tokens to meet with the subroutineBody's structure and build the correspond part of xml

Run			|			    | start parse the tokens with classStatement

Output			|			    | get the output of the xml

