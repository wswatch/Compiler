import java.io.File;
import java.util.ArrayList;

public class Compiler {
	public static void main1(String[] args) {
		try {
			ArrayList<String> list = null;
			ArrayList<String> list1 = null;
			ArrayList<String> list2 = null;
			ArrayList<ArrayList<String>> xml = new ArrayList<ArrayList<String>>();
			if(args.length == 1) {
				Translate compiler = new Translate();
				RW_File rwfile = new RW_File(args[0]);
				buildTable table = new buildTable();
				list = rwfile.Read();
				while(list != null) {			// read the list
					compiler.run(list);
					list2 = compiler.getParse();
					xml.add(list2);
					table.setTable(list2);
					list = rwfile.Read();
				}
				ArrayList<File> flist = rwfile.getFiles();
				Jack jackCompiler = new Jack(table.getTable());
				for (int i = 0; i < flist.size(); ++i) {
					File f = flist.get(i);
					jackCompiler.set(xml.get(i));
					list1 = jackCompiler.getVm();
					rwfile.Write(list1,f);
				}
			}
			else {
				System.out.println("You can only input one file or directory at a time");
			}
			System.out.println("Finish");
		}
		catch (FileException e) {
			System.out.println(e.getMessage());
		}
		catch (TokenError e) {
			System.out.println(e.getMessage());
		} 
		catch (CommentError e) {
			System.out.println(e.getMessage());
		}
		catch (ParseError e) {
			System.out.println(e.getMessage());
		}
	}
	public static void main(String[] args) {
		try {
			ArrayList<String> list = null;
			ArrayList<String> list1 = null;
			ArrayList<String> list2 = null;
			ArrayList<ArrayList<String>> xml = new ArrayList<ArrayList<String>>();
			if(args.length == 0) {
				String s = "/Users/shuaiwang/Desktop/11/Seven";
				RW_File rwfile = new RW_File(s);
				Translate compiler = new Translate();
				buildTable table = new buildTable();
				list = rwfile.Read();
				while(list != null) {			// read the list
					compiler.run(list);
					list2 = compiler.getParse();
					xml.add(list2);
					table.setTable(list2);
					list = rwfile.Read();
				}
				
				ArrayList<File> flist = rwfile.getFiles();
				Jack jackCompiler = new Jack(table.getTable());
				for (int i = 0; i < flist.size(); ++i) {
					File f = flist.get(i);
					jackCompiler.set(xml.get(i));
					list1 = jackCompiler.getVm();
					rwfile.Write(list1,f);
				}
				System.out.println("Finish");
			}
			else {
				System.out.println("You can only input one file or directory at a time");
			}
		}
		catch (FileException e) {
			System.out.println(e.getMessage());
		}
		catch (TokenError e) {
			System.out.println(e.getMessage());
		}
		catch (CommentError e) {
			System.out.println(e.getMessage());
		} 
		catch (ParseError e) {
			System.out.println(e.getMessage());
		}
	}
}
